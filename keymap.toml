# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[mgr]

keymap = [
	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "q",     run = "close",              desc = "Close the current tab, or quit if it is last tab"   },
	{ on = "<C-c>", run = "quit",               desc = "Exit the process"                                   },
	# { on = "Q",     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file"          },
	# { on = "<C-z>", run = "suspend",            desc = "Suspend the process"                                },

  # Spotting
	{ on = "<Tab>",        run = "spot",            desc = "Spot hovered file"          },

	# Hopping
	{ on = "k",            run = "arrow -1",        desc = "Move cursor up"             },
	{ on = "j",            run = "arrow 1",         desc = "Move cursor down"           },
	{ on = "<Up>",         run = "arrow -1",        desc = "Move cursor up"             },
	{ on = "<Down>",       run = "arrow 1",         desc = "Move cursor down"           },
	{ on = "<C-u>",        run = "arrow -50%",      desc = "Move cursor up half page"   },
	{ on = "<C-d>",        run = "arrow 50%",       desc = "Move cursor down half page" },
	{ on = "<S-PageUp>",   run = "arrow -50%",      desc = "Move cursor up half page"   },
	{ on = "<S-PageDown>", run = "arrow 50%",       desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%",     desc = "Move cursor up one page"    },
	{ on = "<PageDown>",   run = "arrow 100%",      desc = "Move cursor down one page"  },
	{ on = [ "g", "g" ],   run = "arrow top", desc = "Move cursor to the top"     },
	{ on = "G",            run = "arrow bot",  desc = "Move cursor to the bottom"  },

	# Navigation
	{ on = "h",       run = "leave",   desc = "Go back to the parent directory"   },
	{ on = "l",       run = "enter",   desc = "Enter the child directory"         },
	{ on = "<Left>",  run = "leave",   desc = "Go back to the parent directory"   },
	{ on = "<Right>", run = "enter",   desc = "Enter the child directory"         },
	{ on = "H",       run = "back",    desc = "Go back to the previous directory" },
	{ on = "L",       run = "forward", desc = "Go forward to the next directory"  },

	# Seeking
	{ on = "<A-k>", run = "seek -5", desc = "Seek up 5 units in the preview"   },
	{ on = "<A-j>", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Selection
  ## migrate to v0.4.0
	{ on = "<Space>",    run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "V",          run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
	{ on = "v",          run = "toggle_all",            desc = "Inverse selection of all files"     },
	{ on = [ "u", "v" ], run = [ "escape --select", "unyank" ],      desc = "Cancel selection of all files"      },

	# Operation
	{ on = "o",               run = "open",                               desc = "Open selected files"                            },
	{ on = "r",               run = "open --interactive",                 desc = "Open selected files interactively"              },
	{ on = "<Enter>",         run = "open",                               desc = "Open selected files"                            },
	{ on = "<S-Enter>",       run = "open --interactive",                 desc = "Open selected files interactively"              },
	{ on = [ "y", "y" ],      run = "yank",                               desc = "Yank selected files (copy)"                     },
	{ on = [ "d", "d" ],      run = "yank --cut",                         desc = "Yank selected files (cut)"                      },
	{ on = "p",               run = "paste",                              desc = "Paste yanked files"                             },
	{ on = [ "u", "y" ],      run = [ "unyank", "escape --select" ],      desc = "Cancel the yank status"                         },
	{ on = [ "u", "d" ],      run = [ "unyank", "escape --select" ],      desc = "Cancel the yank status"                         },
	{ on = [ "d", "T" ],      run = "remove --force",                     desc = "Trash selected files"                           },
	{ on = [ "c", "a" ],      run = "create",                             desc = "Create a file (ends with / for directories)"    },
	{ on = "a",               run = "rename --cursor=before_ext",         desc = "Rename selected file(s)"                        },
	{ on = "A",               run = "rename --cursor=end",                desc = "Rename selected file(s)"                        },
	{ on = "I",               run = "rename --cursor=start",              desc = "Rename selected file(s)"                        },
	{ on = [ "c", "w" ],      run = "rename --empty=all",                 desc = "Rename selected file(s)"                        },
	{ on = [ "c", "i", "w" ], run = "rename --empty=stem --cursor=start", desc = "Rename selected file(s)"                        },
	{ on = ";",               run = "shell --interactive",                desc = "Run a shell command"                            },
	{ on = ":",               run = "shell --block --interactive",        desc = "Run a shell command (block until finishes)"     },
	{ on = ".",               run = "hidden toggle",                      desc = "Toggle the visibility of hidden files"          },
	{ on = [ "f", "f" ],      run = "plugin fzf",                         desc = "Jump to a directory or reveal a file using fzf" },
	# { on = "s",               run = "search fd",                          desc = "Search files by name using fd"                            },
	# { on = [ "f", "g" ],      run = "search rg",                          desc = "Search files by content using ripgrep"                    },
	# { on = "<C-s>",           run = "search none",                        desc = "Cancel the ongoing search"                                },
	# { on = "z",               run = "plugin zoxide",                      desc = "Jump to a directory using zoxide"                         },
	# { on = "X",               run = "unyank",                             desc = "Cancel the yank status"                                   },
	# { on = "D",               run = "remove --permanently",               desc = "Permanently delete selected files"                        },
	{ on = "P",               run = "paste --force",                      desc = "Paste yanked files (overwrite if the destination exists)" },
	# { on = "-",               run = "link",                               desc = "Symlink the absolute path of yanked files"                },
	# { on = "_",               run = "link --relative",                    desc = "Symlink the relative path of yanked files"                },
  # Custom
	{ on = ["c", "l" ], run = "plugin lzx latex_clean",      desc = "Clean LaTeX files"               },
	{ on = "O",         run = "plugin lzx open_in_finder",   desc = "Reveal selected files in Finder" },
	{ on = "S",         run = "shell --block -- fish",       desc = "Open a terminal"                 },
	{ on = "C",         run = "shell --block -- nvim",           desc = "Open current folder in Neovim"  },
	{ on = ["c", "c"],  run = "shell -- code $@",          desc = "Open selected file in VS Code"   },
	{ on = "<C-g>",     run = "shell --block -- TERM=screen-256color lazygit --use-config-file=\"$HOME/.config/lazygit/config.yml\"", desc = "Open current folder in Lazygit" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Set linemode to size"        },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Set linemode to permissions" },
	{ on = [ "m", "c" ], run = "linemode btime",       desc = "Set linemode to btime"       },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime"       },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Set linemode to owner"       },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Set linemode to none"        },

	# Copy
	{ on = [ "y", "p" ], run = "copy path",             desc = "Copy the file path"                  },
	{ on = [ "y", "d" ], run = "copy dirname",          desc = "Copy the directory path"             },
	{ on = [ "y", "n" ], run = "copy filename",         desc = "Copy the filename"                   },
	{ on = [ "y", "." ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

	# Filter
	{ on = "<C-f>", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file"           },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file"       },
	{ on = "n", run = "find_arrow",              desc = "Go to the next found"     },
	{ on = "N", run = "find_arrow --previous",   desc = "Go to the previous found" },

	# Sorting
	{ on = [ "s", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time"           },
	{ on = [ "s", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ "s", "c" ], run = [ "sort btime --reverse=no", "linemode btime" ],  desc = "Sort by created time"            },
	{ on = [ "s", "C" ], run = [ "sort btime --reverse", "linemode btime" ],     desc = "Sort by created time (reverse)"  },
	{ on = [ "s", "e" ], run = "sort extension --reverse=no",                      desc = "Sort by extension"               },
	{ on = [ "s", "E" ], run = "sort extension --reverse",                         desc = "Sort by extension (reverse)"     },
	{ on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                   desc = "Sort alphabetically"             },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse",                      desc = "Sort alphabetically (reverse)"   },
	{ on = [ "s", "n" ], run = "sort natural --reverse=no",                        desc = "Sort naturally"                  },
	{ on = [ "s", "N" ], run = "sort natural --reverse",                           desc = "Sort naturally (reverse)"        },
	{ on = [ "s", "s" ], run = [ "sort size --reverse=no", "linemode size" ],      desc = "Sort by size"                    },
	{ on = [ "s", "S" ], run = [ "sort size --reverse", "linemode size" ],         desc = "Sort by size (reverse)"          },
	{ on = [ "s", "r" ], run = "sort random --reverse=no",                         desc = "Sort randomly"                   },

	# Goto
	{ on = [ "g", "h" ],      run = "cd ~",           desc = "Go to the home directory"             },
	{ on = [ "g", "v" ],      run = "cd /Volumes",    desc = "Go to the Volumes directory"          },
	{ on = [ "g", "c" ],      run = "cd ~/.config",   desc = "Go to the config directory"           },
	{ on = [ "g", "d", "l" ], run = "cd ~/Downloads", desc = "Go to the downloads directory"        },
	{ on = [ "g", "d", "c" ], run = "cd ~/Documents", desc = "Go to the documents directory"        },
	# { on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go to a directory interactively" },

	# Tabs
	{ on = "<A-n>", run = "tab_create --current",     desc = "Create a new tab with CWD"          },
	# { on = "<A-q>", run = "close",                    desc = "Close the current tab"              },
	# { on = "<A-w>", run = "close",                    desc = "Close the current tab"              },
	{ on = "<A-1>", run = "tab_switch 0",             desc = "Switch to the first tab"            },
	{ on = "<A-2>", run = "tab_switch 1",             desc = "Switch to the second tab"           },
	{ on = "<A-3>", run = "tab_switch 2",             desc = "Switch to the third tab"            },
	{ on = "<A-4>", run = "tab_switch 3",             desc = "Switch to the fourth tab"           },
	{ on = "<A-5>", run = "tab_switch 4",             desc = "Switch to the fifth tab"            },
	{ on = "<A-6>", run = "tab_switch 5",             desc = "Switch to the sixth tab"            },
	{ on = "<A-7>", run = "tab_switch 6",             desc = "Switch to the seventh tab"          },
	{ on = "<A-8>", run = "tab_switch 7",             desc = "Switch to the eighth tab"           },
	{ on = "<A-9>", run = "tab_switch 8",             desc = "Switch to the ninth tab"            },
	{ on = "<A-h>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab"         },
	{ on = "<A-l>", run = "tab_switch 1 --relative",  desc = "Switch to the next tab"             },
	{ on = "{",     run = "tab_swap -1",              desc = "Swap current tab with previous tab" },
	{ on = "}",     run = "tab_swap 1",               desc = "Swap current tab with next tab"     },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "~", run = "help", desc = "Open help"    },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[tasks]

keymap = [
	{ on = "<Esc>",   run = "close",    desc = "Close task manager" },
	{ on = "<C-[>",   run = "close",    desc = "Close task manager" },
	{ on = "<C-c>",   run = "close",    desc = "Close task manager" },
	{ on = "w",       run = "close",    desc = "Close task manager" },
	{ on = "k",       run = "arrow -1", desc = "Move cursor up"     },
	{ on = "j",       run = "arrow 1",  desc = "Move cursor down"   },
	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up"     },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down"   },
	{ on = "<Enter>", run = "inspect",  desc = "Inspect the task"   },
	{ on = "x",       run = "cancel",   desc = "Cancel the task"    },
	{ on = "~",       run = "help",     desc = "Open help"          },
	{ on = "<F1>",    run = "help",     desc = "Open help"          },
]

[pick]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel selection"     },
	{ on = "<C-[>",   run = "close",          desc = "Cancel selection"     },
	{ on = "<C-c>",   run = "close",          desc = "Cancel selection"     },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the selection" },
	{ on = "k",       run = "arrow -1",       desc = "Move cursor up"       },
	{ on = "j",       run = "arrow 1",        desc = "Move cursor down"     },
	{ on = "<Up>",    run = "arrow -1",       desc = "Move cursor up"       },
	{ on = "<Down>",  run = "arrow 1",        desc = "Move cursor down"     },
	{ on = "~",       run = "help",           desc = "Open help"            },
	{ on = "<F1>",    run = "help",           desc = "Open help"            },
]

[input]

keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input"                             },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the input"                         },
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	# Mode
	{ on = "i", run = "insert",                              desc = "Enter insert mode"                      },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode"                      },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode"                      },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all"       },
	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character"    },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character"    },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character"    },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },
	# Word-wise movement
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word"             },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word"    },
	{ on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word"    },
	# Line-wise movement
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },
	{ on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
	{ on = "<Home>", run = "move -999", desc = "Move to the BOL" },
	{ on = "<End>",  run = "move 999",  desc = "Move to the EOL" },
	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor"  },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor"  },
	# Kill
	{ on = "<C-u>",   run = "kill bol",      desc = "Kill backwards to the BOL"                       },
	{ on = "<C-w>",   run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>",   run = "kill forward",  desc = "Kill forwards to the end of the current word"    },
	# { on = "<C-k>",   run = "kill eol",      desc = "Kill forwards to the EOL"                      },
	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                              desc = "Cut the selected characters"                        },
	{ on = "D", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL"                                  },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode"           },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character"                          },
	{ on = "y", run = "yank",                                      desc = "Copy the selected characters"                       },
	{ on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor"       },
	{ on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor"      },
	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },
	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spot" },
	# { on = "<C-[>", run = "close", desc = "Close the spot" },
	# { on = "<C-c>", run = "close", desc = "Close the spot" },
	{ on = "<Tab>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "h", run = "swipe -1", desc = "Swipe to the previous file" },
	{ on = "l", run = "swipe 1",  desc = "Swipe to the next file" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Left>",  run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "<Right>", run = "swipe 1",  desc = "Swipe to the previous file" },

	# Copy
	{ on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

# Completion
[cmp]

keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion"               },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion"           },
	{ on = "<Enter>", run = [ "close --submit", "input:close --submit" ], desc = "Submit the completion and input" },
	{ on = "<A-k>",   run = "arrow -1",                                   desc = "Move cursor up"                  },
	{ on = "<A-j>",   run = "arrow 1",                                    desc = "Move cursor down"                },
	{ on = "<Up>",    run = "arrow -1",                                   desc = "Move cursor up"                  },
	{ on = "<Down>",  run = "arrow 1",                                    desc = "Move cursor down"                },
	{ on = "<C-p>",   run = "arrow -1",                                   desc = "Move cursor up"                  },
	{ on = "<C-n>",   run = "arrow 1",                                    desc = "Move cursor down"                },
	# Help
	{ on = "~",       run = "help",                                       desc = "Open help"                       },
	{ on = "<F1>",    run = "help",                                       desc = "Open help"                       },
]

[help]

keymap = [
	{ on = "<Esc>",  run = "escape",   desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>",  run = "escape",   desc = "Clear the filter, or hide the help" },
	{ on = "q",      run = "close",    desc = "Exit the process"                   },
	{ on = "<C-c>",  run = "close",    desc = "Hide the help"                      },
	# Navigation
	{ on = "k",      run = "arrow -1", desc = "Move cursor up"                     },
	{ on = "j",      run = "arrow 1",  desc = "Move cursor down"                   },
	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up"                     },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down"                   },
	# Filtering
	{ on = "/",      run = "filter",   desc = "Apply a filter for the help items"  },
]

[[mgr.prepend_keymap]]
on = ["c", "b"]
run = "plugin yamb save"
desc = "Add bookmark"
[[mgr.prepend_keymap]]
on = "<C-k>"
run = "plugin yamb jump_by_fzf"
desc = "Jump bookmark by fzf"
# Close input by once `Esc` press
#   https://yazi-rs.github.io/docs/tips/#close-input-by-esc
[[input.prepend_keymap]]
on   = "<Esc>"
run  = "close"
desc = "Cancel input"
[[mgr.prepend_keymap]]
on  = "["
run = "plugin parent-arrow -1"
[[mgr.prepend_keymap]]
on  = "]"
run = "plugin parent-arrow 1"
# [[mgr.prepend_keymap]]
# on   = "l"
# run  = "plugin smart-enter"
# desc = "Enter the child directory, or open the file"

# https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi
[[mgr.prepend_keymap]]
on   = "T"
run  = "plugin toggle-pane min-preview"
desc = "Show or hide the preview pane"

[[mgr.prepend_keymap]]
on   = "i"
run  = "plugin toggle-pane max-preview"
desc = "Maximize or restore the preview pane"

[[mgr.prepend_keymap]]
on = [ "<A-w>" ]
run = "plugin close-and-restore-tab close_to_left"
desc = "Close the current tab and turn to left tab, or quit if it is last tab"

[[mgr.prepend_keymap]]
on = [ "<A-q>" ]
run = "plugin close-and-restore-tab close_to_left"
desc = "Close the current tab and turn to left tab, or quit if it is last tab"

[[mgr.prepend_keymap]]
on = [ "<A-u>" ]
run = "plugin close-and-restore-tab restore"
desc = "Restore the closed tab"
